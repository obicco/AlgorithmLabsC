1. Sia data una matrice A di numeri interi con n righe ed m colonne. Si scriva una funzione C con il seguente prototipo che visualizzi tutte le matrici quadrate contenute in A:
                  void displSquare(int **A, int n, int m);
Esempio: con la seguente matrice di 2 righe e 3 colonne, l’output deve elencare le seguenti matrici (il formato di stampa è libero):

2. Dati 2 alberi binari cui si accede mediante il puntatore alla radice, si scriva una funzione C con il seguente prototipo che decida se il secondo è uguale a un sottoalbero del primo o meno.
                    int subtree(link root1, link root2);
Si supponga la disponibilità di una funzione KEYcmp(KEY k1, KEY k2) per comparare le chiavi. Un sottoalbero di un albero T è un albero composto da un nodo che appartiene a T e da tutti i suoi discendenti. Esempio: T2 è un sottoalbero di T1, T3 non è un sottoalbero di T1:

3. Un porto ha n moli di ugual lunghezza intera lun. A ogni molo si accede da entrambi i lati. Una nave è caratterizzata da un intero che ne indica lo spazio necessario per attraccare a un molo. Le navi che chiedono di attraccare sono k e lo spazio richiesto da ciascuna nave è un intero contenuto in una cella del vettore navi. Si scriva in C una funzione ricorsiva che faccia attraccare, se possibile, le k navi agli n moli minimizzando il numero di moli utilizzati.
Esempio: con 4 moli di lunghezza 10 utilizzabili sia a sinistra sia a destra e 6 navi (di dimensioni 8, 3, 5, 2, 5, 2 e 9), la soluzione che utilizza il minimo numero di moli (2) è:
